[{"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\index.tsx":"1","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\reportWebVitals.ts":"2","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\App.tsx":"3","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Store.ts":"4","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Styles.ts":"5","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\HomePage.tsx":"6","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\SearchPage.tsx":"7","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\NotFoundPage.tsx":"8","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\SignInPage.tsx":"9","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Header.tsx":"10","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\QuestionPage.tsx":"11","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\AskPage.tsx":"12","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\QuestionsData.ts":"13","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Page.tsx":"14","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\QuestionList.tsx":"15","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\PageTitle.tsx":"16","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Form.tsx":"17","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Icons.tsx":"18","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Field.tsx":"19","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\AnswerList.tsx":"20","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Question.tsx":"21","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Answer.tsx":"22"},{"size":501,"mtime":1610194979423,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1610195034104,"results":"25","hashOfConfig":"24"},{"size":1907,"mtime":1610194914423,"results":"26","hashOfConfig":"24"},{"size":3358,"mtime":1610195138171,"results":"27","hashOfConfig":"24"},{"size":899,"mtime":1610195024592,"results":"28","hashOfConfig":"24"},{"size":2324,"mtime":1610195196408,"results":"29","hashOfConfig":"24"},{"size":1113,"mtime":1610195010309,"results":"30","hashOfConfig":"24"},{"size":126,"mtime":1610194982707,"results":"31","hashOfConfig":"24"},{"size":117,"mtime":1610195015420,"results":"32","hashOfConfig":"24"},{"size":2650,"mtime":1610194966766,"results":"33","hashOfConfig":"24"},{"size":5144,"mtime":1610301166976,"results":"34","hashOfConfig":"24"},{"size":2311,"mtime":1610194918596,"results":"35","hashOfConfig":"24"},{"size":3577,"mtime":1610301042631,"results":"36","hashOfConfig":"24"},{"size":443,"mtime":1610194986097,"results":"37","hashOfConfig":"24"},{"size":1109,"mtime":1610194996722,"results":"38","hashOfConfig":"24"},{"size":193,"mtime":1610194989439,"results":"39","hashOfConfig":"24"},{"size":5438,"mtime":1610194963369,"results":"40","hashOfConfig":"24"},{"size":282,"mtime":1610194973704,"results":"41","hashOfConfig":"24"},{"size":2841,"mtime":1610274173504,"results":"42","hashOfConfig":"24"},{"size":636,"mtime":1610194909021,"results":"43","hashOfConfig":"24"},{"size":1289,"mtime":1610195171237,"results":"44","hashOfConfig":"24"},{"size":740,"mtime":1610194904604,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1bmxrho",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\index.tsx",[],["93","94"],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\reportWebVitals.ts",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\App.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Store.ts",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Styles.ts",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\HomePage.tsx",["95"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { useEffect, useState, FC } from 'react';\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { PrimaryButton } from './Styles';\nimport { QuestionList } from './QuestionList';\nimport { QuestionData } from './QuestionsData';\nimport { Page } from './Page';\nimport { PageTitle } from './PageTitle';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { AppState, getUnansweredQuestionsActionCreator } from './Store';\n\ninterface Props extends RouteComponentProps {\n  getUnansweredQuestions: () => Promise<void>;\n  questions: QuestionData[] | null;\n  questionsLoading: boolean;\n}\n\nconst HomePage: FC<Props> = ({\n  history,\n  questions,\n  questionsLoading,\n  getUnansweredQuestions,\n}) => {\n  useEffect(() => {\n    if (questions === null) {\n      getUnansweredQuestions();\n    }\n  }, [questions, getUnansweredQuestions]);\n\n  const handleAskQuestionClick = () => {\n    history.push('/ask');\n  };\n  return (\n    <Page>\n      <div\n        css={css`\n          margin: 50px auto 20px auto;\n          padding: 30px 20px;\n          max-width: 600px;\n        `}\n      >\n        <div\n          css={css`\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n          `}\n        >\n          <PageTitle>Unanswered Questions </PageTitle>\n          <PrimaryButton onClick={handleAskQuestionClick}>\n            Ask a question\n          </PrimaryButton>\n        </div>\n        {questionsLoading ? (\n          <div\n            css={css`\n              font-size: 16px;\n              font-style: italic;\n            `}\n          >\n            Loading\n          </div>\n        ) : (\n          <QuestionList data={questions || []} />\n        )}\n      </div>\n    </Page>\n  );\n};\n\nconst mapStateToProps = (store: AppState) => {\n  return {\n    questions: store.questions.unanswered,\n    questionsLoading: store.questions.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n  return {\n    getUnansweredQuestions: () =>\n      dispatch(getUnansweredQuestionsActionCreator()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\SearchPage.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\NotFoundPage.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\SignInPage.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Header.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\QuestionPage.tsx",["96","97","98"],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\AskPage.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\QuestionsData.ts",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Page.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\QuestionList.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\PageTitle.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Form.tsx",["99"],"import { FC, useState, createContext, FormEvent } from 'react';\nimport { PrimaryButton, gray5, gray6 } from './Styles';\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { StringifyOptions } from 'querystring';\n\nexport interface Values {\n  [key: string]: any;\n}\n\nexport interface Errors {\n  [key: string]: string[];\n}\n\nexport interface Touched {\n  [key: string]: boolean;\n}\n\ninterface FormContextProps {\n  values: Values;\n  setValue?: (fieldName: string, value: any) => void;\n  errors: Errors;\n  validate?: (fieldName: string) => void;\n  touched: Touched;\n  setTouched?: (fieldName: string) => void;\n}\n\nexport const FormContext = createContext<FormContextProps>({\n  values: {},\n  errors: {},\n  touched: {},\n});\n\ntype Validator = (value: any, args?: any) => string;\n\nexport const required: Validator = (value: any): string =>\n  value === undefined || value === null || value === ''\n    ? 'This must be populated'\n    : '';\n\nexport const minLength: Validator = (value: any, length: number): string =>\n  value && value.length < length\n    ? `This must be at least ${length} characters`\n    : '';\n\ninterface Validation {\n  validator: Validator;\n  arg?: any;\n}\n\ninterface ValidationProp {\n  [key: string]: Validation | Validation[];\n}\n\nexport interface SubmitResult {\n  success: boolean;\n  errors?: Errors;\n}\n\ninterface Props {\n  submitCaption?: string;\n  validationRules?: ValidationProp;\n  onSubmit: (values: Values) => Promise<SubmitResult> | void;\n  submitResult?: SubmitResult;\n  successMessage?: string;\n  failureMessage?: string;\n}\n\nexport const Form: FC<Props> = ({\n  submitCaption,\n  children,\n  validationRules,\n  onSubmit,\n  submitResult,\n  successMessage = 'Success!',\n  failureMessage = 'Something went wrong',\n}) => {\n  const [values, setValues] = useState<Values>({});\n  const [errors, setErrors] = useState<Errors>({});\n  const [touched, setTouched] = useState<Touched>({});\n  const [submitting, setSubmitting] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [submitError, setSubmitError] = useState(false);\n\n  const validate = (fieldName: string): string[] => {\n    if (!validationRules) {\n      return [];\n    }\n    if (!validationRules[fieldName]) {\n      return [];\n    }\n\n    const rules = Array.isArray(validationRules[fieldName])\n      ? (validationRules[fieldName] as Validation[])\n      : ([validationRules[fieldName]] as Validation[]);\n    const fieldErrors: string[] = [];\n    rules.forEach((rule) => {\n      const error = rule.validator(values[fieldName], rule.arg);\n      if (error) {\n        fieldErrors.push(error);\n      }\n    });\n    const newErrors = { ...errors, [fieldName]: fieldErrors };\n    setErrors(newErrors);\n    return fieldErrors;\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (validateForm()) {\n      setSubmitting(true);\n      setSubmitError(false);\n      const result = await onSubmit(values);\n\n      // The result may be passed through as a prop\n      if (result === undefined) {\n        return;\n      }\n\n      setErrors(result.errors || {});\n      setSubmitError(!result.success);\n      setSubmitting(false);\n      setSubmitted(true);\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors: Errors = {};\n    let haveError: boolean = false;\n    if (validationRules) {\n      Object.keys(validationRules).forEach((fieldName) => {\n        newErrors[fieldName] = validate(fieldName);\n        if (newErrors[fieldName].length > 0) {\n          haveError = true;\n        }\n      });\n    }\n    setErrors(newErrors);\n    return !haveError;\n  };\n\n  const disabled = submitResult\n    ? submitResult.success\n    : submitting || (submitted && !submitError);\n  const showError = submitResult\n    ? !submitResult.success\n    : submitted && submitError;\n  const showSuccess = submitResult\n    ? submitResult.success\n    : submitted && !submitError;\n\n  return (\n    <FormContext.Provider\n      value={{\n        values,\n        setValue: (fieldName: string, value: any) => {\n          setValues({ ...values, [fieldName]: value });\n        },\n        errors,\n        validate,\n        touched,\n        setTouched: (fieldName: string) => {\n          setTouched({ ...touched, [fieldName]: true });\n        },\n      }}\n    >\n      <form noValidate={true} onSubmit={handleSubmit}>\n        <fieldset\n          disabled={disabled}\n          css={css`\n            margin: 10px auto 0 auto;\n            padding: 30px;\n            width: 350px;\n            background-color: ${gray6};\n            border-radius: 4px;\n            border: 1px solid ${gray5};\n            box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n          `}\n        >\n          {children}\n          <div\n            css={css`\n              margin: 30px 0px 0px 0px;\n              padding: 20px 0px 0px 0px;\n              border-top: 1px solid ${gray5};\n            `}\n          >\n            <PrimaryButton type=\"submit\">{submitCaption}</PrimaryButton>\n          </div>\n          {showError && (\n            <p\n              css={css`\n                color: red;\n              `}\n            >\n              {failureMessage}\n            </p>\n          )}\n          {showSuccess && (\n            <p\n              css={css`\n                color: green;\n              `}\n            >\n              {successMessage}\n            </p>\n          )}\n        </fieldset>\n      </form>\n    </FormContext.Provider>\n  );\n};\n","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Icons.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Field.tsx",["100"],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\AnswerList.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Question.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Answer.tsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":5,"column":21,"nodeType":"107","messageId":"108","endLine":5,"endColumn":29},{"ruleId":"105","severity":1,"message":"109","line":17,"column":3,"nodeType":"107","messageId":"108","endLine":17,"endColumn":20},{"ruleId":"105","severity":1,"message":"110","line":23,"column":10,"nodeType":"107","messageId":"108","endLine":23,"endColumn":15},{"ruleId":"105","severity":1,"message":"111","line":25,"column":10,"nodeType":"107","messageId":"108","endLine":25,"endColumn":17},{"ruleId":"105","severity":1,"message":"112","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":26},{"ruleId":"105","severity":1,"message":"113","line":7,"column":10,"nodeType":"107","messageId":"108","endLine":7,"endColumn":36},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'HttpTransportType' is defined but never used.","'gray2' is defined but never used.","'connect' is defined but never used.","'StringifyOptions' is defined but never used.","'addSyntheticLeadingComment' is defined but never used.","no-global-assign","no-unsafe-negation"]