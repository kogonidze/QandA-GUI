[{"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\index.tsx":"1","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\App.tsx":"3","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Header.tsx":"4","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Icons.tsx":"5","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\HomePage.tsx":"6","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Styles.ts":"7","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\QuestionsData.ts":"8","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\QuestionList.tsx":"9","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Question.tsx":"10","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Page.tsx":"11","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\PageTitle.tsx":"12","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\AskPage.tsx":"13","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\SearchPage.tsx":"14","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\SignInPage.tsx":"15","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\NotFoundPage.tsx":"16","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\QuestionPage.tsx":"17","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\AnswerList.tsx":"18","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Answer.tsx":"19","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Form.tsx":"20","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Field.tsx":"21"},{"size":501,"mtime":1609311046778,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1681,"mtime":1609411793996,"results":"25","hashOfConfig":"23"},{"size":2466,"mtime":1609411502277,"results":"26","hashOfConfig":"23"},{"size":298,"mtime":1609310592298,"results":"27","hashOfConfig":"23"},{"size":1810,"mtime":1609396512103,"results":"28","hashOfConfig":"23"},{"size":938,"mtime":1609310592307,"results":"29","hashOfConfig":"23"},{"size":2046,"mtime":1609396446392,"results":"30","hashOfConfig":"23"},{"size":1109,"mtime":1609396481211,"results":"31","hashOfConfig":"23"},{"size":1289,"mtime":1609396489913,"results":"32","hashOfConfig":"23"},{"size":443,"mtime":1609312113003,"results":"33","hashOfConfig":"23"},{"size":193,"mtime":1609396495981,"results":"34","hashOfConfig":"23"},{"size":611,"mtime":1609752977530,"results":"35","hashOfConfig":"23"},{"size":1113,"mtime":1609396435229,"results":"36","hashOfConfig":"23"},{"size":117,"mtime":1609396415292,"results":"37","hashOfConfig":"23"},{"size":126,"mtime":1609396501100,"results":"38","hashOfConfig":"23"},{"size":2743,"mtime":1609753511677,"results":"39","hashOfConfig":"23"},{"size":636,"mtime":1609396523879,"results":"40","hashOfConfig":"23"},{"size":740,"mtime":1609396527650,"results":"41","hashOfConfig":"23"},{"size":3531,"mtime":1609752614716,"results":"42","hashOfConfig":"23"},{"size":2784,"mtime":1609752795702,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1kx4op",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\index.tsx",[],["88","89"],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\App.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Header.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Icons.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\HomePage.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Styles.ts",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\QuestionsData.ts",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\QuestionList.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Question.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Page.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\PageTitle.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\AskPage.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\SearchPage.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\SignInPage.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\NotFoundPage.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\QuestionPage.tsx",["90"],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\AnswerList.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Answer.tsx",[],"C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Form.tsx",["91","92"],"import { FC, useState, createContext } from 'react';\nimport { PrimaryButton, gray5, gray6 } from './Styles';\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { StringifyOptions } from 'querystring';\n\nexport interface Values {\n  [key: string]: any;\n}\n\nexport interface Errors {\n  [key: string]: string[];\n}\n\nexport interface Touched {\n  [key: string]: boolean;\n}\n\ninterface FormContextProps {\n  values: Values;\n  setValue?: (fieldName: string, value: any) => void;\n  errors: Errors;\n  validate?: (fieldName: string) => void;\n  touched: Touched;\n  setTouched?: (fieldName: string) => void;\n}\n\ninterface Validation {\n  validator: Validator;\n  arg?: any;\n}\n\ninterface ValidationProp {\n  [key: string]: Validation | Validation[];\n}\n\ninterface Props {\n  submitCaption?: string;\n  validationRules?: ValidationProp;\n}\n\nexport const Form: FC<Props> = ({\n  submitCaption,\n  children,\n  validationRules,\n}) => {\n  const [values, setValues] = useState<Values>({});\n  const [errors, setErrors] = useState<Errors>({});\n  const [touched, setTouched] = useState<Touched>({});\n  const validate = (fieldName: string): string[] => {\n    if (!validationRules) {\n      return [];\n    }\n    if (!validationRules[fieldName]) {\n      return [];\n    }\n    const rules = Array.isArray(validationRules[fieldName])\n      ? (validationRules[fieldName] as Validation[])\n      : ([validationRules[fieldName]] as Validation[]);\n    const fieldErrors: string[] = [];\n    rules.forEach((rule) => {\n      const error = rule.validator(values[fieldName], rule.arg);\n      if (error) {\n        fieldErrors.push(error);\n      }\n    });\n    const newErrors = { ...errors, [fieldName]: fieldErrors };\n    setErrors(newErrors);\n    return fieldErrors;\n  };\n\n  return (\n    <FormContext.Provider\n      value={{\n        values,\n        setValue: (fieldName: string, value: any) => {\n          setValues({ ...values, [fieldName]: value });\n        },\n        errors,\n        validate,\n        touched,\n        setTouched: (fieldName: string) => {\n          setTouched({ ...touched, [fieldName]: true });\n        },\n      }}\n    >\n      <Form\n        validationRules={{\n          title: [{ validator: required }, { validator: minLength, arg: 10 }],\n          content: [{ validator: required }, { validator: minLength, arg: 50 }],\n        }}\n      >\n        <fieldset\n          css={css`\n            margin: 10px auto 0 auto;\n            padding: 30px;\n            width: 350px;\n            background-color: ${gray6};\n            border-radius: 4px;\n            border: 1px solid ${gray5};\n            box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n          `}\n        >\n          {children}\n          <div\n            css={css`\n              margin: 30px 0px 0px 0px;\n              padding: 20px 0px 0px 0px;\n              border-top: 1px solid ${gray5};\n            `}\n          >\n            <PrimaryButton type=\"submit\">{submitCaption}</PrimaryButton>\n          </div>\n        </fieldset>\n      </Form>\n    </FormContext.Provider>\n  );\n};\n\nexport const FormContext = createContext<FormContextProps>({\n  values: {},\n  errors: {},\n  touched: {},\n});\n\ntype Validator = (value: any, args?: any) => string;\n\nexport const required: Validator = (value: any): string =>\n  value === undefined || value === null || value === ''\n    ? 'This must be populated'\n    : '';\n\nexport const minLength: Validator = (value: any, length: number): string =>\n  value && value.length < length\n    ? 'This must be at least ${length} characters'\n    : '';\n","C:\\Users\\Admin\\source\\repos\\QandA\\frontend\\src\\Field.tsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":11,"column":10,"nodeType":"99","messageId":"100","endLine":11,"endColumn":15},{"ruleId":"97","severity":1,"message":"101","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":136,"column":7,"nodeType":"104","messageId":"105","endLine":136,"endColumn":51},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"@typescript-eslint/no-unused-vars","'gray2' is defined but never used.","Identifier","unusedVar","'StringifyOptions' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation"]