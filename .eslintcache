[{"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\index.tsx":"1","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\reportWebVitals.ts":"2","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\App.tsx":"3","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Styles.ts":"4","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\SearchPage.tsx":"5","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\SignOutPage.tsx":"6","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\NotFoundPage.tsx":"7","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\SignInPage.tsx":"8","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Header.tsx":"9","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Auth.tsx":"10","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\AuthorizedPage.tsx":"11","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\AskPage.tsx":"12","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Store.ts":"13","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\HomePage.tsx":"14","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\QuestionPage.tsx":"15","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\AppSettings.ts":"16","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\QuestionsData.ts":"17","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\QuestionList.tsx":"18","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Page.tsx":"19","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Icons.tsx":"20","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Form.tsx":"21","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Field.tsx":"22","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\PageTitle.tsx":"23","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\AnswerList.tsx":"24","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\http.ts":"25","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Question.tsx":"26","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Answer.tsx":"27"},{"size":501,"mtime":1610194979423,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1610195034104,"results":"30","hashOfConfig":"29"},{"size":2732,"mtime":1610876799243,"results":"31","hashOfConfig":"29"},{"size":963,"mtime":1610877156783,"results":"32","hashOfConfig":"29"},{"size":1224,"mtime":1610877138865,"results":"33","hashOfConfig":"29"},{"size":627,"mtime":1610877149957,"results":"34","hashOfConfig":"29"},{"size":126,"mtime":1610194982707,"results":"35","hashOfConfig":"29"},{"size":475,"mtime":1610877145793,"results":"36","hashOfConfig":"29"},{"size":3094,"mtime":1610877102132,"results":"37","hashOfConfig":"29"},{"size":2493,"mtime":1610876821081,"results":"38","hashOfConfig":"29"},{"size":358,"mtime":1610877084870,"results":"39","hashOfConfig":"29"},{"size":2311,"mtime":1610194918596,"results":"40","hashOfConfig":"29"},{"size":9903,"mtime":1611170947473,"results":"41","hashOfConfig":"29"},{"size":6373,"mtime":1611170692310,"results":"42","hashOfConfig":"29"},{"size":5395,"mtime":1611157928525,"results":"43","hashOfConfig":"29"},{"size":343,"mtime":1610876807740,"results":"44","hashOfConfig":"29"},{"size":4174,"mtime":1611157937153,"results":"45","hashOfConfig":"29"},{"size":1109,"mtime":1610194996722,"results":"46","hashOfConfig":"29"},{"size":443,"mtime":1610194986097,"results":"47","hashOfConfig":"29"},{"size":282,"mtime":1610194973704,"results":"48","hashOfConfig":"29"},{"size":5438,"mtime":1610194963369,"results":"49","hashOfConfig":"29"},{"size":2841,"mtime":1610274173504,"results":"50","hashOfConfig":"29"},{"size":193,"mtime":1610194989439,"results":"51","hashOfConfig":"29"},{"size":636,"mtime":1610194909021,"results":"52","hashOfConfig":"29"},{"size":1285,"mtime":1610877176671,"results":"53","hashOfConfig":"29"},{"size":1289,"mtime":1610195171237,"results":"54","hashOfConfig":"29"},{"size":740,"mtime":1610194904604,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"2gjh2v",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\index.tsx",[],["113","114"],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\reportWebVitals.ts",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\App.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Styles.ts",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\SearchPage.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\SignOutPage.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\NotFoundPage.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\SignInPage.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Header.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Auth.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\AuthorizedPage.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\AskPage.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Store.ts",["115","116"],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\HomePage.tsx",["117","118","119","120","121","122","123","124","125"],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\QuestionPage.tsx",["126","127","128"],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\AppSettings.ts",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\QuestionsData.ts",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\QuestionList.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Page.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Icons.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Form.tsx",["129"],"import { FC, useState, createContext, FormEvent } from 'react';\nimport { PrimaryButton, gray5, gray6 } from './Styles';\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { StringifyOptions } from 'querystring';\n\nexport interface Values {\n  [key: string]: any;\n}\n\nexport interface Errors {\n  [key: string]: string[];\n}\n\nexport interface Touched {\n  [key: string]: boolean;\n}\n\ninterface FormContextProps {\n  values: Values;\n  setValue?: (fieldName: string, value: any) => void;\n  errors: Errors;\n  validate?: (fieldName: string) => void;\n  touched: Touched;\n  setTouched?: (fieldName: string) => void;\n}\n\nexport const FormContext = createContext<FormContextProps>({\n  values: {},\n  errors: {},\n  touched: {},\n});\n\ntype Validator = (value: any, args?: any) => string;\n\nexport const required: Validator = (value: any): string =>\n  value === undefined || value === null || value === ''\n    ? 'This must be populated'\n    : '';\n\nexport const minLength: Validator = (value: any, length: number): string =>\n  value && value.length < length\n    ? `This must be at least ${length} characters`\n    : '';\n\ninterface Validation {\n  validator: Validator;\n  arg?: any;\n}\n\ninterface ValidationProp {\n  [key: string]: Validation | Validation[];\n}\n\nexport interface SubmitResult {\n  success: boolean;\n  errors?: Errors;\n}\n\ninterface Props {\n  submitCaption?: string;\n  validationRules?: ValidationProp;\n  onSubmit: (values: Values) => Promise<SubmitResult> | void;\n  submitResult?: SubmitResult;\n  successMessage?: string;\n  failureMessage?: string;\n}\n\nexport const Form: FC<Props> = ({\n  submitCaption,\n  children,\n  validationRules,\n  onSubmit,\n  submitResult,\n  successMessage = 'Success!',\n  failureMessage = 'Something went wrong',\n}) => {\n  const [values, setValues] = useState<Values>({});\n  const [errors, setErrors] = useState<Errors>({});\n  const [touched, setTouched] = useState<Touched>({});\n  const [submitting, setSubmitting] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [submitError, setSubmitError] = useState(false);\n\n  const validate = (fieldName: string): string[] => {\n    if (!validationRules) {\n      return [];\n    }\n    if (!validationRules[fieldName]) {\n      return [];\n    }\n\n    const rules = Array.isArray(validationRules[fieldName])\n      ? (validationRules[fieldName] as Validation[])\n      : ([validationRules[fieldName]] as Validation[]);\n    const fieldErrors: string[] = [];\n    rules.forEach((rule) => {\n      const error = rule.validator(values[fieldName], rule.arg);\n      if (error) {\n        fieldErrors.push(error);\n      }\n    });\n    const newErrors = { ...errors, [fieldName]: fieldErrors };\n    setErrors(newErrors);\n    return fieldErrors;\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (validateForm()) {\n      setSubmitting(true);\n      setSubmitError(false);\n      const result = await onSubmit(values);\n\n      // The result may be passed through as a prop\n      if (result === undefined) {\n        return;\n      }\n\n      setErrors(result.errors || {});\n      setSubmitError(!result.success);\n      setSubmitting(false);\n      setSubmitted(true);\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors: Errors = {};\n    let haveError: boolean = false;\n    if (validationRules) {\n      Object.keys(validationRules).forEach((fieldName) => {\n        newErrors[fieldName] = validate(fieldName);\n        if (newErrors[fieldName].length > 0) {\n          haveError = true;\n        }\n      });\n    }\n    setErrors(newErrors);\n    return !haveError;\n  };\n\n  const disabled = submitResult\n    ? submitResult.success\n    : submitting || (submitted && !submitError);\n  const showError = submitResult\n    ? !submitResult.success\n    : submitted && submitError;\n  const showSuccess = submitResult\n    ? submitResult.success\n    : submitted && !submitError;\n\n  return (\n    <FormContext.Provider\n      value={{\n        values,\n        setValue: (fieldName: string, value: any) => {\n          setValues({ ...values, [fieldName]: value });\n        },\n        errors,\n        validate,\n        touched,\n        setTouched: (fieldName: string) => {\n          setTouched({ ...touched, [fieldName]: true });\n        },\n      }}\n    >\n      <form noValidate={true} onSubmit={handleSubmit}>\n        <fieldset\n          disabled={disabled}\n          css={css`\n            margin: 10px auto 0 auto;\n            padding: 30px;\n            width: 350px;\n            background-color: ${gray6};\n            border-radius: 4px;\n            border: 1px solid ${gray5};\n            box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n          `}\n        >\n          {children}\n          <div\n            css={css`\n              margin: 30px 0px 0px 0px;\n              padding: 20px 0px 0px 0px;\n              border-top: 1px solid ${gray5};\n            `}\n          >\n            <PrimaryButton type=\"submit\">{submitCaption}</PrimaryButton>\n          </div>\n          {showError && (\n            <p\n              css={css`\n                color: red;\n              `}\n            >\n              {failureMessage}\n            </p>\n          )}\n          {showSuccess && (\n            <p\n              css={css`\n                color: green;\n              `}\n            >\n              {successMessage}\n            </p>\n          )}\n        </fieldset>\n      </form>\n    </FormContext.Provider>\n  );\n};\n","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Field.tsx",["130"],"import { FC, useContext, ChangeEvent } from 'react';\nimport { FormContext } from './Form';\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { fontFamily, fontSize, gray5, gray2, gray6 } from './Styles';\nimport { addSyntheticLeadingComment } from 'typescript';\n\ninterface Props {\n  name: string;\n  label?: string;\n  type?: 'Text' | 'TextArea' | 'Password';\n}\n\nconst baseCSS = css`\n  box-sizing: border-box;\n  font-family: ${fontFamily};\n  font-size: ${fontSize};\n  margin-bottom: 5px;\n  padding: 8px 10px;\n  border: 1px solid ${gray5};\n  border-radius: 3px;\n  color: ${gray2};\n  background-color: white;\n  width: 100%;\n  :focus {\n    outline-color: ${gray5};\n  }\n  :disabled {\n    background-color: ${gray6};\n  }\n`;\n\nexport const Field: FC<Props> = ({ name, label, type = 'Text' }) => {\n  const { setValue, touched, setTouched, validate } = useContext(FormContext);\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    if (setValue) {\n      setValue(name, e.currentTarget.value);\n    }\n    if (touched[name]) {\n      if (validate) {\n        validate(name);\n      }\n    }\n  };\n\n  const handleBlur = () => {\n    if (setTouched) {\n      setTouched(name);\n    }\n    if (validate) {\n      validate(name);\n    }\n  };\n  return (\n    <FormContext.Consumer>\n      {({ values, errors }) => (\n        <div\n          css={css`\n            display: flex;\n            flex-direction: column;\n            margin-bottom: 15px;\n          `}\n        >\n          {label && (\n            <label\n              css={css`\n                font-weight: bold;\n              `}\n              htmlFor={name}\n            >\n              {label}\n            </label>\n          )}\n          {(type === 'Text' || type === 'Password') && (\n            <input\n              type={type.toLowerCase()}\n              id={name}\n              value={values[name] === undefined ? '' : values[name]}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              css={baseCSS}\n            />\n          )}\n          {type === 'TextArea' && (\n            <textarea\n              id={name}\n              value={values[name] === undefined ? '' : values[name]}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              css={css`\n                ${baseCSS};\n                height: 100px;\n              `}\n            />\n          )}\n          {errors[name] &&\n            errors[name].length > 0 &&\n            errors[name].map((error) => (\n              <div\n                key={error}\n                css={css`\n                  font-size: 12px;\n                  color: red;\n                `}\n              >\n                {error}\n              </div>\n            ))}\n        </div>\n      )}\n    </FormContext.Consumer>\n  );\n};\n","C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\PageTitle.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\AnswerList.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\http.ts",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Question.tsx",[],"C:\\Users\\Vasil\\Documents\\QandA-GUI\\src\\Answer.tsx",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":15,"column":3,"nodeType":"137","messageId":"138","endLine":15,"endColumn":8},{"ruleId":"135","severity":1,"message":"139","line":21,"column":10,"nodeType":"137","messageId":"138","endLine":21,"endColumn":15},{"ruleId":"135","severity":1,"message":"140","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":28},{"ruleId":"135","severity":1,"message":"141","line":26,"column":3,"nodeType":"137","messageId":"138","endLine":26,"endColumn":25},{"ruleId":"135","severity":1,"message":"142","line":27,"column":3,"nodeType":"137","messageId":"138","endLine":27,"endColumn":23},{"ruleId":"135","severity":1,"message":"143","line":28,"column":3,"nodeType":"137","messageId":"138","endLine":28,"endColumn":18},{"ruleId":"135","severity":1,"message":"144","line":59,"column":10,"nodeType":"137","messageId":"138","endLine":59,"endColumn":30},{"ruleId":"135","severity":1,"message":"145","line":59,"column":32,"nodeType":"137","messageId":"138","endLine":59,"endColumn":55},{"ruleId":"146","severity":1,"message":"147","line":78,"column":6,"nodeType":"148","endLine":78,"endColumn":27,"suggestions":"149"},{"ruleId":"135","severity":1,"message":"150","line":83,"column":9,"nodeType":"137","messageId":"138","endLine":83,"endColumn":42},{"ruleId":"135","severity":1,"message":"151","line":96,"column":9,"nodeType":"137","messageId":"138","endLine":96,"endColumn":41},{"ruleId":"135","severity":1,"message":"152","line":17,"column":3,"nodeType":"137","messageId":"138","endLine":17,"endColumn":20},{"ruleId":"135","severity":1,"message":"153","line":23,"column":10,"nodeType":"137","messageId":"138","endLine":23,"endColumn":15},{"ruleId":"135","severity":1,"message":"154","line":25,"column":10,"nodeType":"137","messageId":"138","endLine":25,"endColumn":17},{"ruleId":"135","severity":1,"message":"155","line":6,"column":10,"nodeType":"137","messageId":"138","endLine":6,"endColumn":26},{"ruleId":"135","severity":1,"message":"156","line":7,"column":10,"nodeType":"137","messageId":"138","endLine":7,"endColumn":36},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"@typescript-eslint/no-unused-vars","'Store' is defined but never used.","Identifier","unusedVar","'trace' is defined but never used.","'ChangeEvent' is defined but never used.","'getUnansweredQuestions' is defined but never used.","'getAnsweredQuestions' is defined but never used.","'getAllQuestions' is defined but never used.","'sortingQuestionsMode' is assigned a value but never used.","'setSortingQuestionsMode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllQuestions', 'getAnsweredQuestions', 'getUnansweredQuestions', and 'questions'. Either include them or remove the dependency array. If 'getUnansweredQuestions' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["159"],"'handleClickOnSortingByDescTimeBtn' is assigned a value but never used.","'handleClickOnSortingByAscTimeBtn' is assigned a value but never used.","'HttpTransportType' is defined but never used.","'gray2' is defined but never used.","'connect' is defined but never used.","'StringifyOptions' is defined but never used.","'addSyntheticLeadingComment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},"Update the dependencies array to be: [filterQuestionsMode, getAllQuestions, getAnsweredQuestions, getUnansweredQuestions, questions]",{"range":"162","text":"163"},[2350,2371],"[filterQuestionsMode, getAllQuestions, getAnsweredQuestions, getUnansweredQuestions, questions]"]